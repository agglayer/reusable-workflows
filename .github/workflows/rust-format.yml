name: Rust Format

on:
  workflow_call:
    inputs:
      format-command:
        description: Command to use for checking format
        default: cargo make ci-format
        type: string
      use-cargo-make:
        description: Defines if cargo-make need to be install
        default: true
        type: boolean

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  RUSTC_WRAPPER: sccache
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  SCCACHE_GHA_ENABLED: true
  RUSTFLAGS: "-C target-cpu=native -C codegen-units=1"

jobs:
  format:
    name: Format - crates formatting checking
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate cache key
        id: cache_key
        run: echo "key=${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}" >> $GITHUB_OUTPUT

      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9

      - uses: taiki-e/install-action@v2
        if: ${{ inputs.use-cargo-make}}
        with:
          tool: cargo-make

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v2-rust"
          shared-key: ${{ steps.cache_key.outputs.key }}
          cache-targets: false
          cache-directories: |
            ~/.cache/sccache

      - name: Checking format
        run: ${{ inputs.format-command }}
